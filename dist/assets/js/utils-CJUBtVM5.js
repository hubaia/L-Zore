var e=Object.defineProperty,s=Object.defineProperties,r=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,t=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable,l=(s,r,o)=>r in s?e(s,r,{enumerable:!0,configurable:!0,writable:!0,value:o}):s[r]=o,n=(e,s)=>{for(var r in s||(s={}))t.call(s,r)&&l(e,r,s[r]);if(o)for(var r of o(s))a.call(s,r)&&l(e,r,s[r]);return e},c=(e,o)=>s(e,r(o));const i={namespace:"user",state:{currentUser:null,isLoggedIn:!1},effects:{*login({payload:e},{call:s,put:r}){try{const o=yield s(y,e);yield r({type:"loginSuccess",payload:o})}catch(o){yield r({type:"loginError",payload:o.message})}},*logout(e,{put:s}){yield s({type:"logoutSuccess"})}},reducers:{loginSuccess:(e,{payload:s})=>c(n({},e),{currentUser:s,isLoggedIn:!0}),loginError:(e,{payload:s})=>c(n({},e),{error:s}),logoutSuccess:e=>c(n({},e),{currentUser:null,isLoggedIn:!1})}};function y(e){return new Promise(s=>{setTimeout(()=>{s({id:1,username:e.username,email:`${e.username}@example.com`})},1e3)})}const p={namespace:"game",state:{score:0,wins:0,losses:0,currentGame:null,gameHistory:[]},effects:{*updateScore({payload:e},{put:s,select:r}){const{game:o}=yield r(),t=o.score+e;yield s({type:"setScore",payload:t}),0!==e&&(yield s({type:"addToHistory",payload:{type:e>0?"win":"loss",score:e,timestamp:Date.now()}}))},*recordGameResult({payload:e},{put:s}){const{result:r,score:o}=e;"win"===r?yield s({type:"incrementWins"}):"loss"===r&&(yield s({type:"incrementLosses"})),yield s({type:"updateScore",payload:o})}},reducers:{setScore:(e,{payload:s})=>c(n({},e),{score:s}),incrementWins:e=>c(n({},e),{wins:e.wins+1}),incrementLosses:e=>c(n({},e),{losses:e.losses+1}),setCurrentGame:(e,{payload:s})=>c(n({},e),{currentGame:s}),addToHistory:(e,{payload:s})=>c(n({},e),{gameHistory:[...e.gameHistory,s]}),resetGame:e=>c(n({},e),{score:0,wins:0,losses:0,gameHistory:[]})}};export{p as g,i as u};
